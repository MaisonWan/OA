/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.icss.hit.struts.action;

import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.icss.hit.bean.MessageSaveBean;
import com.icss.hit.bean.interfaces.MessageDao;
import com.icss.hit.hibernate.vo.Message;
import com.icss.hit.hibernate.vo.MessageReceivers;
import com.icss.hit.hibernate.vo.ReceiverInfo;
import com.icss.hit.hibernate.vo.SysUser;
import com.icss.hit.struts.form.DraftMessageForm;
import com.icss.hit.struts.form.NewUserMessageForm;

/** 
 * 修改草稿箱里面的信息，是发送还是保存
 * Creation date: 08-08-2009
 * @author 赵颖申
 * XDoclet definition:
 * @struts.action path="/messageAfterAlter" name="draftMessageForm" input="/draftMessage.do" scope="request" validate="true"
 */
public class MessageAfterAlterAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		NewUserMessageForm newUserMessageForm = (NewUserMessageForm) form;// TODO Auto-generated method stub
		//用户ID
		long uid = 1;
		if( request.getSession().getAttribute("UserId") != null ){
			uid = Long.parseLong(request.getSession().getAttribute("UserId").toString());
		}else{
			return mapping.findForward("NullLogin");
		}
		
		long mesID = -2;
		long ReciverID = -2;
		Long result;
		String riBox = "0";
		SysUser user = new SysUser();
		user.setSuId(uid);
		Date date = new Date();
		// 类型
		String optype = newUserMessageForm.getType();
		// 用户ID集合
		String userIds = newUserMessageForm.getIdArray();
		// 标题
		String mesTitle = newUserMessageForm.getMessageTitle();
		// 内容
		String mesContent = newUserMessageForm.getMessagecontent();
		
		long MesID = -1;
		try{
			MesID = Long.parseLong(newUserMessageForm.getMesID());
		}
		catch(Exception ex)
		{
			MesID = -1;
			ex.getStackTrace();
		}
		if(MesID == -1)return mapping.findForward("messageAfterAlter.fail");
		System.out.println(MesID);
		//对应的MesID删除信息
		MessageDao messageAlter = new MessageSaveBean();
		//System.out.println(MesID);
		if(!messageAlter.deleteDraftMessage(MesID))return mapping.findForward("messageAfterAlter.fail");
		
		
		
		
		
		//删除后添加！！！
		String[] Users;           
		Users = userIds.split(",");                        //分出来的用户ID
		System.out.println(userIds);
		//设置信息的基本信息
		Message myMessage = new Message();
		myMessage.setMsTitle(mesTitle);
		myMessage.setMsContent(mesContent);
		myMessage.setMsSendtime(date);
		myMessage.setSysUser(user);
		myMessage.setMsDelete("0");
		//System.out.println(userIds);
		//MessageDao messageSave = new MessageSaveBean();
		//标示新建所属信箱，1为发件箱，2为草稿箱,3为收件箱
		if(optype.equals("send"))
		{
			System.out.println("send");
			//储存在发件箱中，当用户想发送邮件是，放入发件箱，注意的是邮件的发送人的邮箱写的是发件箱，所有接收人的邮箱写的是收件箱
			riBox = "3";
			myMessage.setMsBox("1");
			
		}
		else if(optype.equals("save"))
		{	
			System.out.println("save");
			//储存在草稿箱，当用户想保存草稿的时候，放入草稿箱，注意的是邮件的发送人的邮箱写的是草稿箱，所有接收人的邮箱写的是草稿箱
			riBox = "2";
			myMessage.setMsBox("2");
		}
		mesID  = messageAlter.saveReceiveMessage(myMessage); //保存信息用的，注意了啊啊啊啊！！！！
		if(mesID == -1)return mapping.findForward("messageAfterAlter.fail");
		
		//以下是输入信息的收件人，和收件人的所属邮箱
		for(int i = 0;i < Users.length; i++)
		{
			ReceiverInfo receiver = new ReceiverInfo();
			//设置收件人信息里面相关联的信息的ID号
			Message message = new Message();
			message.setMsId(mesID);
			receiver.setMessage(message);
			//设置接收人的邮箱
			receiver.setRiBox(riBox);
			//设置未读
			receiver.setRiRead("0");
			//设置未删除
			receiver.setRiDelete("0");
			//设置用户的ID
			SysUser sysUser = new SysUser();
			Long id;
			try
			{
				id = Long.parseLong(Users[i]);
			}
			catch(Exception ex)
			{
				ex.getStackTrace();
				return mapping.findForward("messageAfterAlter.fail");
			}
			sysUser.setSuId(id);
			receiver.setSysUser(sysUser);
			//保存用户的内容
			result = messageAlter.saveReceiveUsers(receiver);
			if(result == -1)return mapping.findForward("messageAfterAlter.fail");
		}
		return mapping.findForward("messageAfterAlter.succussd");
	}
}