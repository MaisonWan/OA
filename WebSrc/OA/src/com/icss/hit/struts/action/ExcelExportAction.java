/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.icss.hit.struts.action;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.net.URLEncoder;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionRedirect;

import com.icss.hit.bean.OtherInfoBean;
import com.icss.hit.bean.interfaces.OtherInfo;
import com.icss.hit.component.CreatPdf;
import com.icss.hit.component.Excel;
import com.icss.hit.hibernate.vo.SysUser;
import com.icss.hit.struts.form.addressInfoForm;

/** 
 * 用于输出Excel使用的
 * Creation date: 08-05-2009
 * @author 赵颖申
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="ExcelExport.succussd" path="/address/address.jsp"
 * @struts.action-forward name="ExcelExport.fail" path="/address/address.jsp"
 */
public class ExcelExportAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		//转化表单
		addressInfoForm searchInfoForm = (addressInfoForm) form;// TODO Auto-generated method stub
		//读取用户的ID
		long uid = 1L; // 用户ID
		if( request.getSession().getAttribute("UserId") != null ){
			uid = Long.parseLong(request.getSession().getAttribute("UserId").toString());
		}else{
			return mapping.findForward("NullLogin");
		}
		// 搜索的类型，员工号或者姓名
		String type = searchInfoForm.getType();
		// 关键词
		String key = searchInfoForm.getSuUser();
		// 性别
		String sex= searchInfoForm.getSuSex();
		// 部门ID
		int dept = Integer.parseInt(searchInfoForm.getSuDept());
		//下面是寻找是不是存在数据
		List<SysUser> list;
		OtherInfo info = new OtherInfoBean();
		if(key == null || key.trim() == "")
		{
			if(!sex.equals("0"))
			{
				try {
					sex = URLDecoder.decode(sex, "UTF-8");
				} catch (UnsupportedEncodingException e) {
					// TODO Auto-generated catch block
					sex = "0";
					e.printStackTrace();
				}
			}
			list = info.getUserInfo(sex, dept);
		}else{
		// 得到符合条件的人的信息，得到数据
			list = info.getAllSearchedUserInfo(type, key, sex, dept);
		}
		//没有得到数据
		if(list == null)
		{
			request.setAttribute("NoExcel", "对不起！！没有数据，无法导出！！");
			return mapping.findForward("ExcelExport.fail");
		}
		//写Excel文件
		try{
			//设置文件名
			Date date = new Date();
			//设置文件名字
			String ExcelName = date.getTime() + "_" + uid + ".xls";
			Excel ex = new Excel();
			int sheetIndex = 0;
			//文件的存放地址
			String fileName = request.getRealPath("/excel/")  + "\\" + ExcelName;
			String SheetName = "公司通讯录";
			
			boolean result = false;
			//在指定路径下新建一个Excel文件。（创建一个Excel文件的第一步，必须。）
			result = ex.createExcel(fileName);
			//设置当前sheet工作薄的名称及sheet号（创建一个Excel文件的第二步，必须。）
			result = ex.setCurSheet(sheetIndex, SheetName);
			if(result)
			{
				//加入列的头部
				result = ex.setCellText(0, 0, "员工号");
				result = ex.setCellText(1, 0, "姓名");
				result = ex.setCellText(2, 0, "性别");
				result = ex.setCellText(3, 0, "部门");
				result = ex.setCellText(4, 0, "职位");
				result = ex.setCellText(5, 0, "办公电话");
				result = ex.setCellText(6, 0, "手机");
				result = ex.setCellText(7, 0, "电子邮件");
				for(int i=0;i<list.size() ;i++)
				{
					SysUser user = list.get(i);
					result = ex.setCellText(0, i+1, user.getSuUid());
					result = ex.setCellText(1, i+1, user.getSuUsername());
					result = ex.setCellText(2, i+1, user.getSuSex());
					result = ex.setCellText(3, i+1, user.getSysDept().getSdName());
					result = ex.setCellText(4, i+1, user.getSysPosition().getSpsName());
					result = ex.setCellText(5, i+1, user.getSuTel());
					result = ex.setCellText(6, i+1, user.getSuCellphone());
					result = ex.setCellText(7, i+1, user.getSuEmail());
				}
				result = ex.saveExcel(); //保存文件
			}
			//关闭文件
			ex.closeExcel();
			//写文件失败
			if(!result)
			{
				//添加失败
				return mapping.findForward("ExcelExport.fail");
				
			}
			
			String keyUrl = null;
			String sexUrl = null;
			try {
				keyUrl = URLEncoder.encode(key, "UTF-8");
				sexUrl = URLEncoder.encode(sex, "UTF-8");
			} catch (UnsupportedEncodingException e) {
				return mapping.findForward("ExcelExport.fail");
			}
			
			// 带参数的页面跳转
			
			ActionRedirect redirect = new ActionRedirect(mapping.findForward("ExcelExport.succussd"));
			if(keyUrl != null)
			{
				redirect.addParameter("type",type);
				redirect.addParameter("key", keyUrl);
			}
			redirect.addParameter("sex", sexUrl);
			redirect.addParameter("dept", dept);
			redirect.addParameter("page", 1);
			// 将生成的Excel文件名字传回
			redirect.addParameter("excel", ExcelName);
			return redirect;
		}catch(Exception e){
			e.printStackTrace();
		}
		return mapping.findForward("ExcelExport.fail");
	}
}