/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.icss.hit.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;

import com.icss.hit.bean.UserInfoBean;
import com.icss.hit.bean.interfaces.UserInfo;
import com.icss.hit.struts.form.ModifyPasswordForm;

/** 
 * 实现了对与修改密码的操作，包括验证原始密码，与更新密码
 * Creation date: 08-03-2009
 * @author 万里鹏
 * @struts.action path="/ModifyPassword" name="modifyPasswordForm" input="/info/modifyPassword.jsp" scope="request" validate="true"
 * @struts.action-forward name="ModifyPassword.succeed" path="/UserInfo.do" redirect="true"
 * @struts.action-forward name="ModifyPassword.error" path="/login.jsp"
 * @struts.action-forward name="ModifyPassword.fail" path="/Password.do"
 */
public class ModifyPasswordAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ModifyPasswordForm modifyPasswordForm = (ModifyPasswordForm) form;
		// 用户的主键
		long userId = 1;
		if( request.getSession().getAttribute("UserId") != null ){
			userId = Long.parseLong(request.getSession().getAttribute("UserId").toString());
		}else{
			return mapping.findForward("NullLogin");
		}
		
		// 从session中得到主键
		if( request.getSession().getAttribute("UserId") != null ){
			userId = Long.parseLong(request.getSession().getAttribute("UserId").toString());
		}
		// 得到输入的原始密码
		String oldPass = modifyPasswordForm.getOldpassword();
		String newpassword = modifyPasswordForm.getNewpassword();
		UserInfo info = new UserInfoBean();
		// 如果验证原始密码成功
		if( info.validata(userId, oldPass)){
			info.modifyPassword(userId, newpassword);
			return mapping.findForward("ModifyPassword.succeed");
		}
		else{
			ActionErrors errors = new ActionErrors();
			errors.add("oldpassword", new ActionMessage("ModifyPassword.OldPasswordError"));
			saveErrors(request, errors);
			return mapping.findForward("ModifyPassword.fail");
		}
		
	}
}