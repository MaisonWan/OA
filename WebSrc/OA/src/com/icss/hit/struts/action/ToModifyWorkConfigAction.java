/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.icss.hit.struts.action;


import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.icss.hit.bean.WorkPlanBean;
import com.icss.hit.bean.interfaces.WorkPlanDao;
import com.icss.hit.hibernate.vo.Schedule;
import com.icss.hit.hibernate.vo.SysUser;
import com.icss.hit.struts.form.ModifyWorkConfigForm;

/** 
 * MyEclipse Struts
 * Creation date: 08-05-2009
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class ToModifyWorkConfigAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//通过session获取用户id，并判断是否为空
		long userId=1;
		if( request.getSession().getAttribute("UserId") != null ){
			userId = Long.parseLong(request.getSession().getAttribute("UserId").toString());
		}else{
			return mapping.findForward("NullLogin");
		}
		
		long schid=1;
		//通过url取得日程安排的id的值
		String schId = request.getParameter("schId");
		try{
			if( schId != null){
				schid = Long.parseLong(schId);
				WorkPlanDao wp = new WorkPlanBean();
				Schedule schedule= wp.getScheduleInfo(schid);
				SysUser suTo = schedule.getSysUserBySuIdTo();
				SysUser suFr = schedule.getSysUserBySuIdFrom();
				request.setAttribute("schedule", schedule);
				request.setAttribute("suTo", suTo);
				try {
					//判断用户登录的id与通过日程安排获得的用户的id是否相等
					if (suFr.getSuId()== userId) {
						return mapping.findForward("ToModifyWorkConfig.succeed");
					} else {
						return mapping.findForward("ToModifyWorkConfig.faild");
					}
				} catch (Exception e) {
					// TODO: handle exception
					return mapping.findForward("ToModifyWorkConfig.faild");
				}
			}
			else{
				return mapping.findForward("ToModifyWorkConfig.faild");
				//schid =Long.parseLong(((ModifyWorkConfigForm)request.getAttribute("form")).getSch_id());
			}
		}catch( Exception e){
			return mapping.findForward("ToModifyWorkConfig.faild");
		}
		
	}
}