/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.icss.hit.struts.action;

import java.io.File;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionRedirect;

import ahxu.commons.upload.DiskFileUploadEx;

import com.icss.hit.bean.FileBean;
import com.icss.hit.component.MD5;
import com.icss.hit.hibernate.vo.FileFolder;
import com.icss.hit.hibernate.vo.Files;

/** 
 * 上传会议记录
 * Creation date: 08-10-2009
 * @author 万里鹏
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="UploadMeetingRecord.succeed" path="meetingDetails.do" redirect="true"
 */
public class UploadMeetingRecordAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// 会议的ID
		long mtid;
		try{
			mtid= Long.parseLong(request.getParameter("mtid"));
		}catch(Exception e){
			return mapping.findForward("UploadMeetingRecord.error");
		}
		
		List fileItemList = null;
		String file_name = null;
		// 根据选择的文件夹构造存储文件的路径
		String uploadPath = request.getRealPath("/meetingRecord/") + "\\";// + mtid + ".html";
		
		DiskFileUploadEx fu = new DiskFileUploadEx();// 初始化ahxu扩展后的组件
		fu.setHeaderEncoding("UTF-8");
		try {
			fileItemList = fu.parseRequestEx(request);// ahxu扩展后的:接收上传文件
			Iterator fileItemListIte = fileItemList.iterator();
			while (fileItemListIte.hasNext()) {
				FileItem file = (FileItem) fileItemListIte.next();
				// 检查文件类型
				String name = file.getName();
				String typeName = name.substring(name.lastIndexOf(".") + 1 ).trim();
				if( !typeName.equals("htm") && !typeName.equals("html")){
					request.setAttribute("MeetingRecordError", "文件类型错误，上传失败！");
					break;
				}
				// 检查一下是否有文件超过大小限制的
				if ( file.getSize() > 2 * 1024 * 1024){
					request.setAttribute("MeetingRecordError", "文件大小超过限制");
					return mapping.findForward("UploadMeetingRecord.error");
				}
			
				if (!file.isFormField() && file.getSize() > 0) {
				
					// 上传的文件名
					file_name = new MD5().getMD5Base16(mtid + "") + "." + typeName;
					
					// 要上传文件的路径
					File filepath = new File(uploadPath);
					if (!filepath.exists()) {
						// 如果不存在则新建路径
						filepath.mkdir();
					}
					File savedFile = new File(uploadPath + file_name);
					file.write(savedFile);// 保存图片到指定的目录下
				}
			}
		} catch (Exception e) {
			request.setAttribute("uploaderror", "出现未知错误");
			return mapping.findForward("UploadMeetingRecord.error");
		} finally {
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			fu.dispose();// ahxu扩展后的组件:接收上传文件后的清理工作，原有apache组件没有此过程
		}
		
		ActionRedirect rediect = new ActionRedirect(mapping.findForwardConfig("UploadMeetingRecord.succeed"));
		rediect.addParameter("initiator", mtid);
		return rediect;
		//return mapping.findForward("UploadMeetingRecord.succeed");
	}
}