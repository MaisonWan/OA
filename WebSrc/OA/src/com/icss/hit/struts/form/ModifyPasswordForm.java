/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.icss.hit.struts.form;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;

/** 
 * MyEclipse Struts
 * Creation date: 08-03-2009
 * 
 * XDoclet definition:
 * @struts.form name="modifyPasswordForm"
 */
public class ModifyPasswordForm extends ActionForm {
	/*
	 * Generated fields
	 */

	/** newpassword property */
	private String newpassword;

	/** repeatpassword property */
	private String repeatpassword;

	/** oldpassword property */
	private String oldpassword;

	/*
	 * Generated Methods
	 */

	/** 
	 * Method validate
	 * @param mapping
	 * @param request
	 * @return ActionErrors
	 */
	public ActionErrors validate(ActionMapping mapping,
			HttpServletRequest request) {
		ActionErrors errors = new ActionErrors();
		
		// 验证原始密码的长度
		if( this.oldpassword == null || this.oldpassword.equals("")){
			errors.add("oldpassword", new ActionMessage("ModifyPassword.NullOldPassword"));
		}
		else if(this.oldpassword.length() > 20 ){
			errors.add("oldpassword", new ActionMessage("ModifyPassword.TooLongOldPassword"));
		}
		
		// 验证新密码的长度
		if( this.newpassword == null || this.newpassword.equals("")){
			errors.add("newpassword", new ActionMessage("ModifyPassword.NullNewPassword"));
		}
		else if(this.newpassword.length() > 20 ){
			errors.add("newpassword", new ActionMessage("ModifyPassword.TooLongNewPassword"));
		}
		
		// 验证确认密码
		if( this.repeatpassword == null || this.repeatpassword.equals("")){
			errors.add("repeatpassword", new ActionMessage("ModifyPassword.NullRepeatPassword"));
		}
		else if(this.repeatpassword.length() > 20){
			errors.add("repeatpassword", new ActionMessage("ModifyPassword.TooLongRepeatPassword"));
		}
		else if( !this.repeatpassword.equals(this.newpassword)){
			// 验证与新密码是否一致
			errors.add("repeatpassword", new ActionMessage("ModifyPassword.RepeatPasswordError"));
		}
		request.setAttribute("form", this);
		return errors;
	}

	/** 
	 * Method reset
	 * @param mapping
	 * @param request
	 */
	public void reset(ActionMapping mapping, HttpServletRequest request) {
		this.oldpassword = null;
		this.newpassword = null;
		this.repeatpassword = null;
	}

	/** 
	 * Returns the newpassword.
	 * @return String
	 */
	public String getNewpassword() {
		return newpassword;
	}

	/** 
	 * Set the newpassword.
	 * @param newpassword The newpassword to set
	 */
	public void setNewpassword(String newpassword) {
		this.newpassword = newpassword;
	}

	/** 
	 * Returns the repeatpassword.
	 * @return String
	 */
	public String getRepeatpassword() {
		return repeatpassword;
	}

	/** 
	 * Set the repeatpassword.
	 * @param repeatpassword The repeatpassword to set
	 */
	public void setRepeatpassword(String repeatpassword) {
		this.repeatpassword = repeatpassword;
	}

	/** 
	 * Returns the oldpassword.
	 * @return String
	 */
	public String getOldpassword() {
		return oldpassword;
	}

	/** 
	 * Set the oldpassword.
	 * @param oldpassword The oldpassword to set
	 */
	public void setOldpassword(String oldpassword) {
		this.oldpassword = oldpassword;
	}
}