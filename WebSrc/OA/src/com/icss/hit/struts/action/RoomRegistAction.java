/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.icss.hit.struts.action;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;

import com.icss.hit.bean.searchRoomBean;
import com.icss.hit.hibernate.vo.Room;
import com.icss.hit.hibernate.vo.RoomReg;
import com.icss.hit.hibernate.vo.SysUser;
import com.icss.hit.struts.form.RoomRegistForm;

/** 
 * 用于申请房间，并且输入到数据库里面去
 * Creation date: 08-08-2009
 * @author 赵颖申
 * XDoclet definition:
 * @struts.action path="/roomRegist" name="roomRegistForm" input="/room/roomRegist.jsp" scope="request" validate="true"
 */
public class RoomRegistAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		RoomRegistForm roomRegistForm = (RoomRegistForm) form;// TODO Auto-generated method stub
		long uid = 1;
		if( request.getSession().getAttribute("UserId") != null ){
			uid = Long.parseLong(request.getSession().getAttribute("UserId").toString());
		}else{
			return mapping.findForward("NullLogin");
		}
		
		//获的从会议室申请来的数据
		//会议室ID
		long RoomNO;
		long attendPeopleSum;
		//会议名
		String meetingName = roomRegistForm.getMeetingName();
		//会议地点
		String meetingPlace = roomRegistForm.getMeetingPlace();
		//会议开始时间
		String beginTime = roomRegistForm.getBeginTime();
		//会议结束时间
		String endTime = roomRegistForm.getEndTime();
		//会议参加人数
		String attendSum = roomRegistForm.getAttendSum();
		//会议申请原因
		String meetingContent = roomRegistForm.getMeetingContent();
		//验证一下啦・・・怕直接执行这个.do
		if(meetingName==null||meetingPlace==null||beginTime==null||endTime==null||attendSum==null||meetingContent==null)
			return mapping.findForward("roomRegist.fail");
		try{
			RoomNO = Long.parseLong(meetingPlace);
			attendPeopleSum = Long.parseLong(attendSum);
		}
		catch(Exception ex)
		{
			ex.getStackTrace();
			return mapping.findForward("roomRegist.fail");
		}
		//String形式的时间来转成数据库中的玩意儿Date形式的
		//用于数据库查询
		Date begin = null;             
		Date end = null;
		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd kk:mm:ss");
		//开始时间
		try{
			
			if( beginTime != null ){
				begin = format.parse(beginTime);
			}
		}catch( Exception e ){
			begin = null;
		}
		// 结束时间
		try{
			if( endTime != null ){
				end = format.parse(endTime);
			}
		}catch( Exception e ){
			end = null;
		}
		//判断一下是不是成功转化
		if(begin==null||end==null)return mapping.findForward("roomRegist.fail");
		
		//数据操作，插入到数据库里面去！！
		//首先先利用会议时间查找是否有在这个时间之间并被数据库管理人员允许了的，如果没有，可以插入数据库
		//具体方法：首先在数据库中将所有的数据库管理人员允许了的会议室申请查出来，将beginTime和endTime分别列成一个集合，看看现在的申请是不是和其冲突
		searchRoomBean searchRoom = new searchRoomBean();
		int conflict = searchRoom.findConflict(begin, end, uid);
		//如果不能插入的话，返回false；
		if(conflict == 1||conflict == -1)
		{
			return mapping.findForward("roomRegist.fail");
		}
		//能够插入的时候，进行插入
		else
		{
			//填入发起人ID
			SysUser user = new SysUser();
			user.setSuId(uid);
			//房间的ID
			Room room = new Room();
			room.setRId(RoomNO);
			RoomReg roomReg = new RoomReg();
			roomReg.setRoom(room);
			roomReg.setSysUser(user);
			roomReg.setRrTitle(meetingName);
			roomReg.setRrBegintime(begin);
			roomReg.setRrEndtime(end);
			roomReg.setRrContent(meetingContent);
			roomReg.setRrAttendsum(attendPeopleSum);
			
			if(searchRoom.saveRoomReg(roomReg) == 1)
			{
				return mapping.findForward("roomRegist.successd");
			}
			else
			{
				return mapping.findForward("roomRegist.fail");
			}
		}
		
	}
}