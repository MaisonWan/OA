/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.icss.hit.struts.action;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.net.URLEncoder;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.icss.hit.bean.WorkPlanBean;
import com.icss.hit.bean.interfaces.WorkPlanDao;
import com.icss.hit.component.PageBean;
import com.icss.hit.hibernate.vo.Schedule;

/** 
 * 日程管理,高级搜索
 * Creation date: 08-04-2009
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="SearchPlan.succeed" path="/work/allSearchWork.jsp"
 */
public class SearchPlanAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws UnsupportedEncodingException {
		// 用户ID
		long uid = 1L;
		if( request.getSession().getAttribute("UserId") != null ){
			uid = Long.parseLong(request.getSession().getAttribute("UserId").toString());
		}else{
			return mapping.findForward("NullLogin");
		}
		
		// 从地址栏得到参数
		String nameUrl = request.getParameter("name");
		String beginUrl = request.getParameter("begin");
		String endUrl = request.getParameter("end");
		String completeUrl = request.getParameter("complete");
		
		//System.out.println("地址栏中取到的开始时间："+endUrl);
		String name = null;
		String begin = null;
		String end = null;
		
		// 页码数
		int page = 1;
		
		// 页码数
		try{
			if( request.getParameter("page") != null ){
				page = Integer.parseInt(request.getParameter("page").toString());
			}
		}catch( Exception e ){
			page = 1;
		}
		// 名字
		try{
			if( nameUrl != null)
				name = URLDecoder.decode(nameUrl,"UTF-8");
			
		}catch(Exception e){
			name = null;
		}
		
		// 开始时间
		try {
			if( beginUrl != null ){
				begin = URLDecoder.decode(beginUrl,"UTF-8");
			}
		} catch (UnsupportedEncodingException e2) {
			begin = null;
		}
		
		// 结束时间
		try {
			if( endUrl != null ){
				end = URLDecoder.decode(endUrl,"UTF-8");
				//System.out.println("转换之后的开始时间："+begin);
			}
		} catch (UnsupportedEncodingException e2) {
			e2.printStackTrace();
			end = null;
		}
		
		// 日期
		Date beginTime = null;
		Date endTime = null;
		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd kk:mm:ss");
		try{
			//开始时间
			if( begin != null ){
				beginTime = format.parse(begin);
				//System.out.println("转换成BeginDate之后的开始时间"+beginTime);
			}
		}catch( Exception e ){
			beginTime = null;
		}
		// 结束时间
		try{
			if( end != null ){
				endTime = format.parse(end);
				//System.out.println("转换成EndDate之后的开始时间"+endTime);
			}
		}catch( Exception e ){
			endTime = null;
		}
		
		WorkPlanDao dao = new WorkPlanBean();
		
		// 所有符合条件的数据数量
		int count = dao.allSearchCount(name, beginTime, endTime, completeUrl, uid);
		// 得到数据的页数
		int pageCount = dao.getPageCount(count, WorkPlanBean.PAGE_SIZE);
		
		// 符合条件的数据
		List<Schedule> list = dao.allSearch(name, beginTime, endTime, completeUrl, uid, page);
		// 将结果传到前台
		request.setAttribute("list", list);
		
		// 将搜索的条件返回到前台
		request.setAttribute("name", name);
		request.setAttribute("begin", begin);
		request.setAttribute("end", end);
		request.setAttribute("complete", completeUrl);
		
		// 分页信息设置
		PageBean bean = new PageBean();
		bean.setTotal(pageCount);
		bean.setThispage(page);
		bean.setLink("SearchPlan.do");
		if( completeUrl == null ){
			bean.addParam("complete=2");
		}else{
			bean.addParam("complete=" + completeUrl);
		}
		
		// 地址栏中会自动加25，所以需要再次转码
		if( name != null )
			bean.addParam("name=" + URLEncoder.encode(nameUrl));
		else
			bean.addParam("name=");
		
		// 为空的时候自动在地址栏上加Null
		if( beginUrl != null ){
			bean.addParam("begin=" + URLEncoder.encode(beginUrl));
		}else{
			bean.addParam("begin=");
		}
		
		if( endUrl != null ){
			bean.addParam("end=" + URLEncoder.encode(endUrl));
		}else{
			bean.addParam("end=");
		}
		request.setAttribute("pageString", bean.getPageString());
		return mapping.findForward("SearchPlan.succeed");
	}
}