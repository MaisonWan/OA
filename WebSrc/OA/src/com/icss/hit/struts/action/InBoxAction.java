/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.icss.hit.struts.action;

import java.net.URLDecoder;
import java.net.URLEncoder;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.icss.hit.bean.ConfigWorkBean;
import com.icss.hit.bean.InBoxBean;
import com.icss.hit.bean.interfaces.InBox;
import com.icss.hit.component.PageBean;
import com.icss.hit.hibernate.vo.ReceiverInfo;

/** 
 * 得到当前用户收件箱所有留言
 * Creation date: 08-06-2009
 * @author 朱金彪
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="inBox.succeed" path="/message/inBox.jsp"
 * @struts.action-forward name="inbox.succeed" path="/message/inBox.jsp"
 */
public class InBoxAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// 当前登录用户ID(收件人ID)
		long receiverId=-1;
		if( request.getSession().getAttribute("UserId") != null ){
			receiverId = Long.parseLong(request.getSession().getAttribute("UserId").toString());
		}else{
			return mapping.findForward("NullLogin");
		}
		
		// 查询页码
		int pageNo = 1;
		// 存放查询内容编码
		String contentURL;
		
		// 所有人员的数量
		int count = 0;
		// 分页的数量
		int pageCount = 0;
		// 得到搜索的数据
		List<ReceiverInfo> list = null;
		// 存放查询方式编码
		String searchTypeURL;
		String searchType = null;
		String content = null;
		searchType = request.getParameter("searchType");
		content = request.getParameter("content");
		try{
			pageNo = Integer.parseInt(request.getParameter("page"));
		}
		catch(Exception e){
			pageNo =1;
		}
		try{
			content = URLDecoder.decode(content, "UTF-8");
		}
		catch(Exception e){
			content=null;
		}
		
		if( receiverId != -1){
			InBox inbox = new InBoxBean();
			
			// 得到总数和分页
			count = inbox.getInBoxMessagesCount(searchType, content, receiverId);
			pageCount = inbox.getPageCount(count, ConfigWorkBean.PAGE_SIZE);
			
			// 设置页面的范围
			pageNo = pageNo < 1? 1:pageNo;
			pageNo = pageNo > pageCount? pageCount: pageNo;
			
			list = inbox.getInBoxMessages(searchType, content, receiverId, pageNo);
			request.setAttribute("inBoxList", list);
						
			// 生成前面的页面显示
			PageBean pagebean = new PageBean();
			if(searchType!=null){
				pagebean.addParam("searchType=" + searchType);
			}
			if(content!=null&&(!content.equals(""))){
				pagebean.addParam("content=" + URLEncoder.encode(request.getParameter("content")));
			}
			pagebean.setLink("inBox.do");
			pagebean.setTotal(pageCount);
			pagebean.setThispage(pageNo);
			try{
				contentURL =URLEncoder.encode(request.getParameter("content"));
				searchTypeURL =URLEncoder.encode(request.getParameter("searchType"));
			}
			catch(Exception e){
				contentURL = "";
				searchTypeURL = "";
			}
			request.setAttribute("url","&page="+pageNo+"&searchType="+searchTypeURL+"&content="+contentURL);
			request.setAttribute("pageString", pagebean.getPageString());
			request.setAttribute("searchType",searchType);
			request.setAttribute("content",content);
			
		}
		return mapping.findForward("inBox.succeed");
	}
}