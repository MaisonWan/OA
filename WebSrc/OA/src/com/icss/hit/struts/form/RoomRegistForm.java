/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.icss.hit.struts.form;

import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;

import com.icss.hit.bean.MeetingLaunchBean;
import com.icss.hit.bean.interfaces.meetingLaunchDao;

/** 
 * MyEclipse Struts
 * Creation date: 08-08-2009
 * 
 * XDoclet definition:
 * @struts.form name="roomRegistForm"
 */
public class RoomRegistForm extends ActionForm {
	/*
	 * Generated fields
	 */

	/** beginTime property */
	private String beginTime;

	/** meetingContent property */
	private String meetingContent;

	/** meetingName property */
	private String meetingName;

	/** meetingPlace property */
	private String meetingPlace;

	/** attendSum property */
	private String attendSum;

	/** endTime property */
	private String endTime;

	/*
	 * Generated Methods
	 */

	/** 
	 * Method validate
	 * @param mapping
	 * @param request
	 * @return ActionErrors
	 */
	public ActionErrors validate(ActionMapping mapping,
			HttpServletRequest request) {
		// TODO Auto-generated method stub
		ActionErrors errors = new ActionErrors();
		long uid = 1;
		if( request.getSession().getAttribute("UserId") != null ){
			uid = Long.parseLong(request.getSession().getAttribute("UserId").toString());
		}
		//errors = null;
		if(meetingName == null||meetingName=="")errors.add("meetingName",new ActionMessage("meetingName.NotNull"));
		if(meetingPlace == null||meetingPlace==""||meetingPlace.equals("0"))errors.add("meetingPlace",new ActionMessage("meetingPlace.NotNull"));
		if(beginTime == null||beginTime=="")errors.add("beginTime",new ActionMessage("beginTime.NotNull"));
		if(endTime == null||endTime=="")errors.add("endTime",new ActionMessage("endTime.NotNull"));
		if(attendSum == null||attendSum=="")errors.add("attendSum",new ActionMessage("attendSum.NotNull"));
		if(meetingContent == null||meetingContent=="")errors.add("meetingContent",new ActionMessage("meetingContent.NotNull"));
		if(beginTime!=null&&endTime!=null&&beginTime.trim()!=""&&endTime.trim()!="")
		{
			// 日期
			Date begin = null;
			Date end = null;
			SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd kk:mm:ss");
			try{
				//开始时间
				if( beginTime != null ){
					begin = format.parse(beginTime);
				}
			}catch( Exception e ){
				begin = null;
			}
			// 结束时间
			try{
				if( endTime != null ){
					end = format.parse(endTime);
				}
			}catch( Exception e ){
				end = null;
			}
			
			if(begin ==null||end==null)errors.add("timeError",new ActionMessage("timeError.Error"));
			else
			{
				long m = end.getTime()-begin.getTime();
				if(m <= 0)errors.add("timeError",new ActionMessage("timeError.Error"));
			}
			if(attendSum!=null)
			{
				try{
					Integer.parseInt(attendSum);
				}
				catch(Exception ex)
				{
					errors.add("Integer",new ActionMessage("Integer.IntegerError"));
					ex.getStackTrace();
				}
			}
			//验证冲突
			if(meetingPlace != null&&meetingPlace!=""&&!(meetingPlace.equals("0")))                 //房间不为空
			{
				meetingLaunchDao regist = new MeetingLaunchBean();
				int conflict = regist.timeConflict(beginTime, endTime, uid, meetingPlace);
				System.out.println(conflict);
				if(conflict==1||conflict==-1)errors.add("timeConflict",new ActionMessage("timeConflict.conflict"));
			}
		}
		request.setAttribute("form", this);
		return errors;
	}

	/** 
	 * Method reset
	 * @param mapping
	 * @param request
	 */
	public void reset(ActionMapping mapping, HttpServletRequest request) {
		// TODO Auto-generated method stub
	}

	/** 
	 * Returns the beginTime.
	 * @return String
	 */
	public String getBeginTime() {
		return beginTime;
	}

	/** 
	 * Set the beginTime.
	 * @param beginTime The beginTime to set
	 */
	public void setBeginTime(String beginTime) {
		this.beginTime = beginTime;
	}

	/** 
	 * Returns the meetingContent.
	 * @return String
	 */
	public String getMeetingContent() {
		return meetingContent;
	}

	/** 
	 * Set the meetingContent.
	 * @param meetingContent The meetingContent to set
	 */
	public void setMeetingContent(String meetingContent) {
		this.meetingContent = meetingContent;
	}

	/** 
	 * Returns the meetingName.
	 * @return String
	 */
	public String getMeetingName() {
		return meetingName;
	}

	/** 
	 * Set the meetingName.
	 * @param meetingName The meetingName to set
	 */
	public void setMeetingName(String meetingName) {
		this.meetingName = meetingName;
	}

	/** 
	 * Returns the meetingPlace.
	 * @return String
	 */
	public String getMeetingPlace() {
		return meetingPlace;
	}

	/** 
	 * Set the meetingPlace.
	 * @param meetingPlace The meetingPlace to set
	 */
	public void setMeetingPlace(String meetingPlace) {
		this.meetingPlace = meetingPlace;
	}

	/** 
	 * Returns the attendSum.
	 * @return String
	 */
	public String getAttendSum() {
		return attendSum;
	}

	/** 
	 * Set the attendSum.
	 * @param attendSum The attendSum to set
	 */
	public void setAttendSum(String attendSum) {
		this.attendSum = attendSum;
	}

	/** 
	 * Returns the endTime.
	 * @return String
	 */
	public String getEndTime() {
		return endTime;
	}

	/** 
	 * Set the endTime.
	 * @param endTime The endTime to set
	 */
	public void setEndTime(String endTime) {
		this.endTime = endTime;
	}
}