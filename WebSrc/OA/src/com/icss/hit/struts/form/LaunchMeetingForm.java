/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.icss.hit.struts.form;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;

import com.icss.hit.bean.MeetingLaunchBean;
import com.icss.hit.bean.interfaces.meetingLaunchDao;

/** 
 * MyEclipse Struts
 * Creation date: 08-09-2009
 * 
 * XDoclet definition:
 * @struts.form name="launchMeetingForm"
 */
public class LaunchMeetingForm extends ActionForm {
	/*
	 * Generated fields
	 */

	/** beginTime property */
	private String beginTime;

	/** meetingContent property */
	private String meetingContent;

	/** meetingTitle property */
	private String meetingTitle;

	/** endTime property */
	private String endTime;

	/** idArray property */
	private String idArray;
	
	/** meetingRoom property */
	private String meetingRoom;
	
	/** address property */
	private String address;
	/*
	 * Generated Methods
	 */

	/** 
	 * Method validate
	 * @param mapping
	 * @param request
	 * @return ActionErrors
	 */
	public ActionErrors validate(ActionMapping mapping,
			HttpServletRequest request) {
		// TODO Auto-generated method stub
		ActionErrors errors = new ActionErrors();
		if(beginTime==null||endTime==null||beginTime.trim().equals("")||endTime.trim().equals(""))errors.add("time",new ActionMessage("time.NotNull"));
		if(idArray==null||idArray.trim().equals(""))errors.add("sum",new ActionMessage("sum.NotNull"));
		if(meetingTitle==null||meetingTitle.trim().equals(""))errors.add("meetingTitle",new ActionMessage("meetingTitle.NotNull"));
		if(meetingContent==null||meetingContent.trim().equals(""))errors.add("content",new ActionMessage("content.NotNull"));
		if(meetingRoom.equals("0"))errors.add("meetingRoom",new ActionMessage("meetingRoom.NotNull"));    //房间不选择的时候
		if(beginTime!=null&&endTime!=null&&!beginTime.trim().equals("")&&!endTime.trim().equals("")&&!meetingRoom.equals("0"))
		{
			long userId = 1L;
			if( request.getSession().getAttribute("UserId") != null ){
				userId = Long.parseLong(request.getSession().getAttribute("UserId").toString());
			}else{
				errors.add("UserError",new ActionMessage("UserError.Error"));
			}
			//转化Date来看我们的输入的时间是不是符合前后的条件
			long m = -1;
			Date begin = new Date();
			Date end = new Date();
			SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			try {
				begin = formatter.parse(beginTime);
				end = formatter.parse(endTime);
				m = end.getTime()-begin.getTime();
				if(m < 0)errors.add("timeAfter",new ActionMessage("timeAfter.Error"));
			} catch (ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			meetingLaunchDao meetingLaunch = new MeetingLaunchBean();
			int conflict = meetingLaunch.getConflict(beginTime, endTime, userId, meetingRoom);
			if(conflict==1||conflict==-1)errors.add("conflict",new ActionMessage("conflict.Error"));
			System.out.println(conflict);
		}
		request.setAttribute("form", this);
		return errors;
	}

	/** 
	 * Method reset
	 * @param mapping
	 * @param request
	 */
	public void reset(ActionMapping mapping, HttpServletRequest request) {
		// TODO Auto-generated method stub
	}

	/** 
	 * Returns the beginTime.
	 * @return String
	 */
	public String getBeginTime() {
		return beginTime;
	}

	/** 
	 * Set the beginTime.
	 * @param beginTime The beginTime to set
	 */
	public void setBeginTime(String beginTime) {
		this.beginTime = beginTime;
	}

	/** 
	 * Returns the meetingContent.
	 * @return String
	 */
	public String getMeetingContent() {
		return meetingContent;
	}

	/** 
	 * Set the meetingContent.
	 * @param meetingContent The meetingContent to set
	 */
	public void setMeetingContent(String meetingContent) {
		this.meetingContent = meetingContent;
	}

	/** 
	 * Returns the meetingTitle.
	 * @return String
	 */
	public String getMeetingTitle() {
		return meetingTitle;
	}

	/** 
	 * Set the meetingTitle.
	 * @param meetingTitle The meetingTitle to set
	 */
	public void setMeetingTitle(String meetingTitle) {
		this.meetingTitle = meetingTitle;
	}

	/** 
	 * Returns the endTime.
	 * @return String
	 */
	public String getEndTime() {
		return endTime;
	}

	/** 
	 * Set the endTime.
	 * @param endTime The endTime to set
	 */
	public void setEndTime(String endTime) {
		this.endTime = endTime;
	}

	/** 
	 * Returns the idArray.
	 * @return String
	 */
	public String getIdArray() {
		return idArray;
	}

	/** 
	 * Set the idArray.
	 * @param idArray The idArray to set
	 */
	public void setIdArray(String idArray) {
		this.idArray = idArray;
	}

	public String getMeetingRoom() {
		return meetingRoom;
	}

	public void setMeetingRoom(String meetingRoom) {
		this.meetingRoom = meetingRoom;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}
}